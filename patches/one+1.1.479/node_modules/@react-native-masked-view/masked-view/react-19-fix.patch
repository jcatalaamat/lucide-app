diff --git a/node_modules/one/node_modules/@react-native-masked-view/masked-view/index.js b/node_modules/one/node_modules/@react-native-masked-view/masked-view/index.js
index 39db2f9..f41d7b9 100644
--- a/node_modules/one/node_modules/@react-native-masked-view/masked-view/index.js
+++ b/node_modules/one/node_modules/@react-native-masked-view/masked-view/index.js
@@ -1,3 +1,3 @@
-import MaskedView from './js/MaskedView';
+var MaskedView = require('./js/MaskedView');
 
-export default MaskedView;
+module.exports = MaskedView;
diff --git a/node_modules/one/node_modules/@react-native-masked-view/masked-view/js/MaskedView.js b/node_modules/one/node_modules/@react-native-masked-view/masked-view/js/MaskedView.js
index 63d0eef..25a5d13 100644
--- a/node_modules/one/node_modules/@react-native-masked-view/masked-view/js/MaskedView.js
+++ b/node_modules/one/node_modules/@react-native-masked-view/masked-view/js/MaskedView.js
@@ -3,15 +3,14 @@
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
- *
- * @flow
- * @format
  */
 
-import * as React from 'react';
-import { View, StyleSheet, requireNativeComponent } from 'react-native';
+var React = require('react');
+var ReactNative = require('react-native');
+var View = ReactNative.View;
+var StyleSheet = ReactNative.StyleSheet;
+var requireNativeComponent = ReactNative.requireNativeComponent;
 
-const RNCMaskedView = requireNativeComponent<any>('RNCMaskedView');
+var RNCMaskedView = requireNativeComponent('RNCMaskedView');
 
-import type { MaskedViewProps } from './MaskedViewTypes';
 
 /**
@@ -46,28 +45,44 @@ import type { MaskedViewProps } from './MaskedViewTypes';
  * transparent pixels block that content.
  *
  */
-export default class MaskedView extends React.Component<MaskedViewProps> {
-  _hasWarnedInvalidRenderMask = false;
+var MaskedView = React.createClass({
+  displayName: 'MaskedView',
+
+  _hasWarnedInvalidRenderMask: false,
 
-  render(): React.Node {
-    const { maskElement, children, ...otherViewProps } = this.props;
+  render: function() {
+    var props = this.props;
+    var maskElement = props.maskElement;
+    var children = props.children;
+    var otherViewProps = Object.assign({}, props);
+    delete otherViewProps.maskElement;
+    delete otherViewProps.children;
 
     if (!React.isValidElement(maskElement)) {
       if (!this._hasWarnedInvalidRenderMask) {
         console.warn(
           'MaskedView: Invalid `maskElement` prop was passed to MaskedView. ' +
-            'Expected a React Element. No mask will render.',
+            'Expected a React Element. No mask will render.'
         );
         this._hasWarnedInvalidRenderMask = true;
       }
-      return <View {...otherViewProps}>{children}</View>;
+      return React.createElement(View, otherViewProps, children);
     }
 
-    return (
-      <RNCMaskedView {...otherViewProps}>
-        <View pointerEvents="none" style={StyleSheet.absoluteFill}>
-          {maskElement}
-        </View>
-        {children}
-      </RNCMaskedView>
-    );
-  }
-}
+    return React.createElement(
+      RNCMaskedView,
+      otherViewProps,
+      React.createElement(
+        View,
+        {
+          pointerEvents: 'none',
+          style: {
+            position: 'absolute',
+            left: 0,
+            right: 0,
+            top: 0,
+            bottom: 0
+          }
+        },
+        maskElement
+      ),
+      children
+    );
+  }
+});
+
+module.exports = MaskedView; 